[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vertiport-autonomy"
version = "1.0.0"
description = "Deep Reinforcement Learning platform for autonomous vertiport coordination"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "N-cryptd"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering",
    "Environment :: Console",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "gymnasium>=0.28.0",
    "stable-baselines3>=2.0.0",
    "numpy>=1.21.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "matplotlib>=3.5.0",
    "torch>=2.0.0",
    "tensorboard>=2.10.0",
    "pandas>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
]

[project.scripts]
vertiport-train = "scripts.train:main"
vertiport-evaluate = "scripts.evaluate:main"
vertiport-curriculum = "scripts.train_curriculum:main"

[project.urls]
Homepage = "https://github.com/N-cryptd/vertiport-autonomy"
Documentation = "https://vertiport-autonomy.readthedocs.io"
Repository = "https://github.com/N-cryptd/vertiport-autonomy.git"
Issues = "https://github.com/N-cryptd/vertiport-autonomy/issues"
Changelog = "https://github.com/N-cryptd/vertiport-autonomy/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"vertiport_autonomy" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
src_paths = ["src", "scripts", "tests"]
multi_line_output = 3
line_length = 88
known_first_party = ["vertiport_autonomy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src/vertiport_autonomy --cov-report=term-missing --cov-report=html"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.10"
packages = ["src/vertiport_autonomy"]
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["src/vertiport_autonomy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]